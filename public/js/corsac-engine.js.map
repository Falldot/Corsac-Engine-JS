{
  "version": 3,
  "sources": ["../../src/corsac-engine.js"],
  "sourcesContent": ["/* eslint-disable no-undef */\n//const {ECS, types} = require(\"./ECS\");\n\nconst shader1 = require(\"./shader1.glsl\");\nconst shader2 = require(\"./shader2.glsl\");\n\nconst resize = canvas => {\n    const displayWidth = document.body.clientWidth;\n    const displayHeight = document.body.clientHeight;\n\n    if (canvas.width != displayWidth ||\n        canvas.height != displayHeight) {\n\n      canvas.width = displayWidth;\n      canvas.height = displayHeight;\n    }\n};\n\nwindow.addEventListener(`resize`, () => {\n    resize(document.getElementById(\"root\"));\n}, false);\n\nconst createShader = (gl, type, source) => {\n    const shader = gl.createShader(type);\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.log(\"error\");\n    gl.deleteShader(shader);\n};\n\nconst createProgram = (gl, vertexShader, fragmentShader) => {\n    const program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.log(\"error\");\n    gl.deleteProgram(program);\n};\n\nconst randomInt = range => Math.floor(Math.random() * range);\n\nconst CreateRect = (gl, color, positions) => {\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(color), gl.STATIC_DRAW);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n};\n\nconst CreateColorUniform = (r, g, b, a) => [\n    r / 255,\n    g / 255,\n    b / 255,\n    a / 255\n];\n\nconst CreateAttribPositon = (x, y, w, h) => [\n    x,      y,\n    x + w,    y,\n    x,      y + h,\n    x,      y + h,\n    x + w,    y,\n    x + w,    y + h,\n];\n\nconst CreateAttribColor = (r, g, b, a) => [\n    r / 255, b / 255, g / 255, a / 255,\n    r / 255, b / 255, g / 255, a / 255,\n    r / 255, b / 255, g / 255, a / 255,\n    r / 255, b / 255, g / 255, a / 255,\n    r / 255, b / 255, g / 255, a / 255,\n    r / 255, b / 255, g / 255, a / 255,\n];\n\nconst main = () => {\n    const canvas = document.querySelector(\"#root\");\n    const gl = canvas.getContext(\"webgl\");\n    resize(canvas);\n\n    const vertexShader = createShader(gl, gl.VERTEX_SHADER, shader1);\n    const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, shader2);\n\n    const program = createProgram(gl, vertexShader, fragmentShader);\n\n    const positionLocation = gl.getAttribLocation(program, \"a_position\");\n    const colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    const resolutionUniformLocation = gl.getUniformLocation(program, \"u_resolution\");\n\n    //position\n    const positionBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n    //color\n    const colorBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\n\n\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.useProgram(program);\n\n    const size = 4;\n    const type = gl.FLOAT;\n    const normalize = false;\n    const stride = 0;\n    const offset = 0;\n\n    //position\n    gl.enableVertexAttribArray(positionLocation);\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n    gl.vertexAttribPointer(positionLocation, size, type, normalize, stride, offset);\n    ///////////////////////\n\n    //color\n    gl.enableVertexAttribArray(colorLocation);\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\n    gl.vertexAttribPointer(colorLocation, size, type, normalize, stride, offset);\n    ///////////////////////\n\n    gl.uniform2f(resolutionUniformLocation, gl.canvas.width, gl.canvas.height);\n\n   // for (let ii = 0; ii < 50; ++ii) {\n    const pos = CreateAttribPositon(randomInt(300), randomInt(300), randomInt(300), randomInt(300));\n    const color = CreateAttribColor(randomInt(255), randomInt(255), randomInt(255), 255);\n    CreateRect(gl, color, pos);\n    //}\n};\nmain();\n\n\n\n\n\n// const ecs = new ECS();\n\n// const Position = ecs.CreateComponent(types.uint32);\n// const Direction = ecs.CreateComponent(types.uint32);\n\n// const Translate = ecs.CreateGroup(Position, Direction);\n\n// const Transform = ecs.CreateSystem(Translate, (entities, Pos) => {\n//     entities.forEach(element => {\n//         console.log(Pos[element]);\n//     });\n// });\n\n// ecs.CreateEntity(Translate);\n\n// transform();\n"],
  "mappings": "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",
  "names": []
}
